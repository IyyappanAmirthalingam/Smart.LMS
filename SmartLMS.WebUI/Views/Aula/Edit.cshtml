@model AulaViewModel

@{
    ViewBag.Title = "Alteração de aula";
}

<div class="panel panel-info">
    <div class="panel-heading">
        Alteração de aula
    </div>
    <div class="panel-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(model => model.Id)
         
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ordem, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Ordem, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Ordem, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.DiasLiberacao, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DiasLiberacao, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DiasLiberacao, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdCurso, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdCurso, ViewBag.Cursos as SelectList, "-- Selecione --", new { @class = "form-control dropdownjs" })
                        @Html.ValidationMessageFor(model => model.IdCurso, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Ativo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Ativo)
                            @Html.ValidationMessageFor(model => model.Ativo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdProfessor, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.IdProfessor, ViewBag.Professores as SelectList, "-- Selecione --", new { @class = "form-control dropdownjs" })
                        @Html.ValidationMessageFor(model => model.IdProfessor, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Conteudo, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Conteudo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Conteudo, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <button type="submit" class="btn btn-success btn-sm">
                            <i class="fa fa-save"></i>
                        </button>
                        @Html.ActionLink("Voltar", "IndexAdmin", null, new { @class = "btn btn-simple btn-sm btn-default" })
                    </div>
                </div>
            </div>
        }
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Arquivos, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="jumbotron jumbotron-upload">
                        <form action="@Url.Action("SalvarMaterialApoio")" method="post" enctype="multipart/form-data" class="dropzone" id="dropzoneForm" style="background: none; border: none;">
                             @Html.HiddenFor(x => x.Id)
                             <div class="fallback">
                                <input name="file" type="file" />
                                <input type="submit" value="Enviar Imagem" />
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
 <div style="display:none" id="dz-template-preview">
    <div class="dz-preview dz-file-preview">
        <div class="dz-details">
            <div class="dz-filename">
                <span data-dz-name></span>
            </div>
            <div class="dz-size" data-dz-size></div>
            <img data-dz-thumbnail />
        </div>
        <div class="dz-progress">
            <div class="progress progress-line-primary">
                <div class="dz-upload progress-bar" role="progressbar" aria-valuemin="0" aria-valuemax="100" data-dz-uploadprogress></div>
            </div>
        </div>
        <div class="dz-success-mark"><span>✔</span></div>
        <div class="dz-error-mark"><span>✘</span></div>
        <div class="dz-error-message"><span data-dz-errormessage></span></div>
    </div>
</div>
@section styles {
    @Styles.Render("~/Content/dropzone/dropZoneStyles")
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzone")
    <script>
        (function () {
            var $private = {};

            Dropzone.options.dropzoneForm = {
                init: function () {
                    this.on("removedfile", function (data) {
                        var id = "";
                        if (data.xhr) {
                            var res = JSON.parse(data.xhr.response);
                            id = res.Message
                        }
                        else {
                            id = data.name;
                        }
                        $private.removerMaterialApoio('@Model.Id.ToString()', id);
                    });

                    $private.carregarMateriaisApoio('@Model.Id.ToString()', this);
                },

                previewTemplate: $("#dz-template-preview").html(),
                dictDefaultMessage: "Arraste os documentos da aula aqui, ou clique para selecioná-los",
                addRemoveLinks: true,
                dictRemoveFile: "Remover",
                dictCancelUpload: "Cancelar"
            };

            $private.removerMaterialApoio = function (id, nomeArquivo) {
                $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Aula/RemoverMaterialApoio",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ id: id, nomeArquivo: nomeArquivo })
                });
            };

            $private.carregarMateriaisApoio = function (idAula, dropzoneForm) {
                $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Aula/ListarMateriaisDeApoio",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ idAula: idAula }),
                    success: function (data) {
                        $.each(data.Arquivos, function (index, item) {
                            var file = {
                                name: item.Nome,
                                size: item.size,
                                accepted: true,
                                status: Dropzone.ADDED
                            };
                            dropzoneForm.emit("addedfile", file);
                            dropzoneForm.emit("complete", file);
                            dropzoneForm.files.push(file);
                        });
                    }
                });
            };
        }());
    </script>
}
