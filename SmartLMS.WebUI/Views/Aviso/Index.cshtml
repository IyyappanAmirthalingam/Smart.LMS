@model Carubbi.GenericRepository.PagedListResult<SmartLMS.WebUI.Models.AvisoViewModel>
@{
    ViewBag.Title = "Histórico de avisos";

}
<div class="panel panel-success">
    <div class="panel-heading">
        <h3 class="panel-title">Filtros da consulta</h3>
    </div>
    <div class="panel-body panel-body-no-margin">
        <div class="form-horizontal">
            <div class="col-md-4">
                <div class="form-group label-static is-empty">
                    <label class="control-label">Data Início</label>
                    <input class="datepicker form-control" type="text" id="dataInicio" value="@DateTime.Now.AddMonths(-1).ToShortDateString()" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group label-static is-empty">
                    <label class="control-label">Data Fim</label>
                    <input class="datepicker form-control" type="text" id="dataFim" value="@DateTime.Now.ToShortDateString()" />
                </div>
            </div>
            <div class="col-md-4">
                <div class="form-group label-static is-empty">
                    <label for="TipoAcesso" class="control-label">Tipo de Acesso</label>
                    @Html.DropDownList("TipoAviso", ViewBag.TiposAviso as SelectList, new { @class = "form-control dropdownjs" })
                </div>
            </div>
            <div class="text-right">
                <button id="btnFiltrar" class="btn btn-primary btn-sm">Filtrar</button>
            </div>
        </div>
    </div>
</div>
<div class="card">
    <div class="content">
        <h5 class="titulo-indice">
            Histórico de avisos
        </h5>
        <div>
            <div id="historico-container" class="list-group">
                @foreach (var item in Model.Entities)
                {

                    <div class="list-group-item list-group-item-sm">
                        <div class="row-action-primary">
                            @switch (item.Tipo)
                            {

                                case SmartLMS.Domain.Servicos.TipoAviso.Geral:
                                    <i class="material-icons">public</i>
                                    break;
                                case SmartLMS.Domain.Servicos.TipoAviso.Turma:
                                    <i class="material-icons">people</i>
                                    break;
                                case SmartLMS.Domain.Servicos.TipoAviso.Pessoal:
                                    <i class="material-icons">person</i>
                                    break;
                            }
                         
                        </div>
                        <div class="row-content">
                            <h5 class="list-group-item-heading">@item.Tipo</h5>
                            @if (item.Tipo == SmartLMS.Domain.Servicos.TipoAviso.Turma)
                            {
                                <p class="list-group-item-text">@item.NomeTurma</p>
                            }
                            <p class="list-group-item-text">@Html.Raw(item.Texto)</p>
                            <div class="footer-content">@item.DataHora</div>
                        </div>
                    </div>
                    <div class="list-group-separator list-group-separator-sm"></div>
                }


            </div>

            @Html.Partial("_paginacao")
        </div>
    </div>
</div>

@section scripts {
    <script type="text/x-handlebars-template" id="historico-template">
        {{#each Entities}}
        <div class="list-group-item list-group-item-sm">
            <div class="row-action-primary">
                {{#equals Tipo 1}}
                    <i class="material-icons">public</i>
                {{else}}
                    {{#equals Tipo 2}}
                        <i class="material-icons">people</i>
                    {{else}}
                        <i class="material-icons">person</i>
                    {{/equals}}
                {{/equals}}
            </div>
            <div class="row-content">
                <h5 class="list-group-item-heading">{{TipoDescricao}}</h5>
                {{#equals Tipo 2}}
                <p class="list-group-item-text">{{NomeTurma}}</p>
                {{/equals}}
                <p class="list-group-item-text">{{{Texto}}}</p>
                <div class="footer-content">{{DataHora}}</div>
            </div>
        </div>
        <div class="list-group-separator list-group-separator-sm"></div>
        {{/each}}
    </script>

    <script>
        SmartLMS.HistoricoAvisosProxy = (function () {
            $public = {}, $private = {};

 
            $public.Listar = function (dataInicio, dataFim, tipo, pagina) {
                return $.ajax({
                    type: "POST",
                    url: SmartLMS.api + "Aviso/ListarHistoricoAvisos",
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    data: JSON.stringify({ dataInicio: dataInicio, dataFim: dataFim, tipo: tipo, pagina: pagina })
                });
            };

            return $public;
        }());

        (function (historicoProxy) {
            var $private = {}, $public = {};

            $(function () {
                $private.UltimaQuantidade = @Model.Count
                $private.TipoAcesso = 0;
                $("#paginacao-container").on("click", ".paginacao-pagina", $private.IrParaPagina);
                $("#paginacao-container").on("click", ".paginacao-proxima", $private.ProximaPagina);
                $("#paginacao-container").on("click", ".paginacao-anterior", $private.PaginaAnterior);
                $("#TipoAviso").on("dropdownjs.change", function () {
                    var selectedItem = $(this).find("option:selected");
                    $private.TipoAcesso = selectedItem.val();

                });
                $("#btnFiltrar").on("click", $private.ConsultarHistorico);
                $private.PaginacaoTemplate = Handlebars.compile($("#paginacao-template").html());
                $private.HistoricoTemplate = Handlebars.compile($("#historico-template").html());

            });

            $private.Pagina = 1;

            $private.IrParaPagina = function () {
                $private.Pagina = $(this).text();
                var dataInicio = $("#dataInicio").val();
                var dataFim = $("#dataFim").val();

                historicoProxy.Listar(dataInicio, dataFim, $private.TipoAcesso, $private.Pagina).done($private.AtualizarResultados);

            };
            $private.ProximaPagina = function () {
                $private.Pagina++;
                var dataInicio = $("#dataInicio").val();
                var dataFim = $("#dataFim").val();

                historicoProxy.Listar(dataInicio, dataFim, $private.TipoAcesso, $private.Pagina).done($private.AtualizarResultados);


            };
            $private.PaginaAnterior = function () {
                $private.Pagina--;
                var dataInicio = $("#dataInicio").val();
                var dataFim = $("#dataFim").val();

                historicoProxy.Listar(dataInicio, dataFim, $private.TipoAcesso, $private.Pagina).done($private.AtualizarResultados);

            };

            $private.ConsultarHistorico = function () {
                $private.Pagina = 1;
                var dataInicio = $("#dataInicio").val();
                var dataFim = $("#dataFim").val();
                historicoProxy.Listar(dataInicio, dataFim, $private.TipoAcesso, $private.Pagina).done($private.AtualizarResultados);
            };


            $private.CalcularPaginaMinima = function (quantidade, pagina) {
                if (pagina < 4) {
                    return 1;
                }
                else if (pagina > quantidade - 3) {
                    return quantidade - 4;
                }
                else {
                    return pagina - 2;
                }
            };

            $private.CalcularPaginaMaxima = function (quantidade, pagina) {
                if (pagina < 4) {
                    if (quantidade < 6) {
                        return quantidade + 1;
                    }
                    else {
                        return 6;
                    }
                }
                else if (pagina > quantidade - 3) {
                    return quantidade + 1;
                }
                else {
                    return pagina + 3;
                }
            };

            $private.AtualizarResultados = function (data) {
                $("#historico-container").html($private.HistoricoTemplate(data));
                if (data.HasNext) {
                    $(".paginacao-proxima").show();
                }
                else {
                    $(".paginacao-proxima").hide();
                }

                if (data.HasPrevious) {
                    $(".paginacao-anterior").show();
                }
                else {
                    $(".paginacao-anterior").hide();
                }


                $("#paginacao-container").html($private.PaginacaoTemplate({
                    paginas: Math.ceil(data.Count / 8),
                    possuiAnterior: data.HasPrevious,
                    possuiProxima: data.HasNext,
                    paginaMin: $private.CalcularPaginaMinima(Math.ceil(data.Count / 8), 1),
                    paginaMax: $private.CalcularPaginaMaxima(Math.ceil(data.Count / 8), 1),
                    paginaCorrente: $private.Pagina
                }));


            };

        }(SmartLMS.HistoricoAvisosProxy));
    </script>
}