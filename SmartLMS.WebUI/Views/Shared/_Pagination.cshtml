@{ var paginaMax = Math.Ceiling(Model.Count / 8M);
    if (paginaMax > 5)
    {
        paginaMax = 5;
    }
}
<div class="text-center" id="pagination-container">
    <ul class="pagination pagination-primary">

        <li>
            <a class="paginacao-anterior" @if (!Model.HasPrevious) { <text> style="display:none" </text>      } href="javascript:void(0);">&lt; previous</a>
        </li>

        @for (int i = 1; i <= paginaMax; i++)
        {
            <li class="@(i == 1? "active" : string.Empty)">
                <a href="javascript:void(0);" class="paginacao-pagina">@i</a>
            </li>
        }
        <li><a class="paginacao-proxima" style="@(!Model.HasNext? "display:none;": string.Empty)" href="javascript:void(0);">next &gt;</a></li>
    </ul>
</div>

<script id="pagination-template" type="text/x-handlebars-template">

    <ul class="pagination pagination-primary">
        {{#if hasPrevious}}
        <li><a class="paginacao-anterior" href="javascript:void(0);">&lt; previous</a></li>
        {{/if}}

        {{#for minPage maxPage 1}}
        {{#equals this @@root.currentPage}}
        <li class="active">
            {{else}}
        <li>
            {{/equals}}
            <a href="javascript:void(0);" class="paginacao-pagina">{{this}}</a>
        </li>
        {{/for}}


        {{#if hasNext}}
        <li><a class="paginacao-proxima" href="javascript:void(0);">next &gt;</a></li>
        {{/if}}
    </ul>

</script>
